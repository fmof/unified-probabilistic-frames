ROOT_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
#both boost and thrift have files under (thrift|boost) here

export CONC_SRC_DIR := /home/fferraro/code/concrete/concrete-thrift/thrift
export CONCRETE_CPP_PROJ_DIR := $(ROOT_DIR)

export SYSTEM_INCLUDE_DIR := /usr/local/include
export SYSTEM_LIB_DIR := /usr/local/lib

export THRIFT_INCLUDE_DIR := $(SYSTEM_INCLUDE_DIR)
export THRIFT_LIB_DIR := $(SYSTEM_LIB_DIR)
export THRIFT := thrift

export BOOST_INCLUDE_DIR := $(SYSTEM_INCLUDE_DIR)
export BOOST_LIB_DIR := $(SYSTEM_INCLUDE_DIR)
export BOOST_COMPILE_FLAGS := -DBOOST_LOG_DYN_LINK

export GTEST_DIR := $(CONCRETE_CPP_PROJ_DIR)/gtest-1.7.0

export TEMP_DIRECTORY := /tmp

PREFIX :=

#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################

export LD_LIBRARY_PATH := $(BOOST_LIB_DIR):$(THRIFT_LIB_DIR):$(LD_LIBRARY_PATH):$(CONCRETE_CPP_PROJ_DIR)/core/lib:$(CONCRETE_CPP_PROJ_DIR)/util/lib

ifeq ($(shell uname -s),Darwin)
	export SHLIB_LIB_PATH_ENV_VAR := DYLD_LIBRARY_PATH
	export SHLIB_SUFFIX := .dylib
	export SHLIB_NAME_FLAG := -install_name
	export DYLD_LIBRARY_PATH := $(LD_LIBRARY_PATH):$(DYLD_LIBRARY_PATH)
#	export CXXFLAGS += -stdlib=libstdc++
else
	export SHLIB_LIB_PATH_ENV_VAR := LD_LIBRARY_PATH
	export SHLIB_SUFFIX := .so
	export SHLIB_NAME_FLAG := -soname
	export TEST_FLAGS := -pthread -DGTEST_USE_OWN_TR1_TUPLE=0
endif

export THRIFT_SO = $(THRIFT_LIB_DIR)/libthrift$(SHLIB_SUFFIX)

BOOST_MAJOR = 1
BOOST_MINOR = 57
BOOST_PATCH = 0
BOOST_VERSION := $(BOOST_MAJOR)_$(BOOST_MINOR)_$(BOOST_PATCH)
THRIFT_VERSION := 0.9.2

export INSTALL_PREFIX_ := $(PREFIX)

export THRIFT_README := $(CONC_SRC_DIR)/../README.md

# First we're going to define C++ compiler flags
export CXX_THRIFT_INC += -I$(THRIFT_INCLUDE_DIR)
# the HAVE_CONFIG_H is to get TCompactProtocol working
export CXX_THRIFT_FLAGS += -DHAVE_NETINET_IN_H -DHAVE_INTTYPES_H $(THRIFT_INC) -DHAVE_CONFIG_H
# note that we add -shared and -fPIC later on
export CXX_THRIFT_LIBFLAGS += -L$(THRIFT_LIB_DIR)

# Crucially, these build on whatever CXXFLAGS is set to
export CXXFLAGS += $(CXX_THRIFT_INC) $(CXX_THRIFT_FLAGS) $(CXX_THRIFT_LIBFLAGS) 
export CXXFLAGS += -I$(BOOST_INCLUDE_DIR) -L$(BOOST_LIB_DIR) $(BOOST_COMPILE_FLAGS)

export TEST_INCLUDE := -isystem ${GTEST_DIR}/include -I$(GTEST_DIR)/include -I$(GTEST_DIR)
export TEST_LIB := -L$(GTEST_DIR)/lib -lpthread
export TEST_FLAGS += -pthread

#########################################

export CONCRETE_CPP_PROJ_HOME := $(shell pwd)
export CONCRETE_CORE := $(CONCRETE_CPP_PROJ_HOME)/core
export CONCRETE_INCLUDE_DIR := $(CONCRETE_CORE)/include

########################################

# For generating the shared object
export CONCRETE_LIB_DIR := $(CONCRETE_CORE)/lib
export CONCRETE_SO := $(CONCRETE_LIB_DIR)/concrete$(SHLIB_SUFFIX)

########################################

########## COLORS ###########
export NO_COLOR=\033[0m
export STATUS_COLOR=\033[34;01m
export MAGENTA_COLOR=\033[35;01m
export OK_COLOR=\033[32;01m
export ERROR_COLOR=\033[31;01m
export WARN_COLOR=\033[33;01m

export OK_STRING=$(OK_COLOR)[OK]$(NO_COLOR)
export ERROR_STRING=$(ERROR_COLOR)[ERROR]$(NO_COLOR)
export WARN_STRING=$(WARN_COLOR)[WARNING]$(NO_COLOR)

export ECHO :=echo

ifndef CONC_SRC_DIR
echo "$(ERROR_STRING) Please set $(STATUS_COLOR)$$CONC_SRC_DIR$(NO_COLOR)"
exit 1
endif

verify_exist = @if [  -e "$(1)" ]; then \
echo "$(ERROR_STRING) File $(MAGENTA_COLOR)$(1)$(NO_COLOR) does not exist" ; \
exit 1; \
fi
